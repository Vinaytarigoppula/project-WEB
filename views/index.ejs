<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Billing Application</title>
    <link rel="stylesheet" href="/static/index.css">
</head>
<body>
    <div class="nav-container">
        <div class="navbar">
            <span>Billing Application</span>
            <div class="nav-buttons">
                <button onclick="window.location.href='/AddProduct'">Add Product</button>
                <button>Logout</button>
                <button>Profile</button>
            </div>
        </div>
    </div>
<form action="/submitBill" method="post" onsubmit="collectTableData()">
    <div class="container">
        <div class="header">
            <div class="left">
                <label>Bill No.:</label><br>
                <input type="text" id="billNumberField" value="" name="billno" readonly>
            </div>
            <div class="right">
                <label id="DateLabel">Date:</label><br>
                <input type="text" id="dateField" name="date" readonly>
            </div>
        </div>

        <div class="taskbar">
            <button class="button" type="button" onclick="addItem()">Add Item</button>
        </div>

        <div class="table-container">
            <table id="itemTable" name="item_details">
                <thead>
                    <tr>
                        <th>Item Code</th>
                        <th>Name</th>
                        <th>Rate</th>
                        <th>Quantity</th>
                        <th>Amount</th>
                        <th>Discount (%)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Dynamic rows -->
                </tbody>
            </table>
        </div>
        <input type="hidden" name="tableData" id="tableData">
        <div class="input-group">
            <div>
                <label>Customer Name:</label><br>
                <input type="text" placeholder="Enter customer name">
            </div>
            <div>
                <label name="billype">Sale Type:</label><br>
                <select>
                    <option value="cash">Cash</option>
                    <option value="card">Card</option>
                    <option value="upi">UPI</option>
                </select>
            </div>
        </div>

        <div class="total-section">
            <label>Bill Amount:</label>
            <input type="text" id="totalAmount" name="amount" value="0.00" readonly>
            <label>Discount Amount:</label>
            <input type="text" id="totalDiscount" name="discount" value="0.00" readonly>
            <label>Net Amount:</label>
            <input type="text" id="netAmount" name="netamount" value="0.00" readonly>
        </div>

        <div class="footer">
            <button class="button" onclick="calculateTotal()">Calculate Total</button>
            <button class="button" type="submit" onclick="handlePrint()">Print</button>
        </div>
    </div>
</form>
    <script>
        const itemMapping = <%- itemMapping %>;
    </script>

    <script>
        function addItem() {
            const table = document.getElementById("itemTable").getElementsByTagName("tbody")[0];
            const row = table.insertRow();
            row.innerHTML = `
                <td>
                    <select onchange="updateProductName(this)" class="itemcode">
                        <option value="">Select Code</option>
                        ${Object.keys(itemMapping).map(code => `<option value="${code}">${code}</option>`).join('')}
                    </select>
                </td>
                <td><input type="text" placeholder="Name" readonly class="nameField"></td>
                <td><input type="number" value="0" onchange="calculateAmount(this)" class="rateField"></td>
                <td><input type="number" value="1" onchange="calculateAmount(this)" class="quantityField"></td>
                <td class="amount">0.00</td>
                <td><input type="number" value="0" onchange="calculateAmount(this)" class="discountField" placeholder="Discount"></td>
                <td><button onclick="removeItem(this)" class="button" style="background-color: #dc3545;">Remove</button></td>
            `;
        }

        function updateProductName(selectElement) {
            const selectedCode = selectElement.value;
            const row = selectElement.closest("tr");
            const nameField = row.querySelector(".nameField");
            nameField.value = itemMapping[selectedCode] || "";
        }

        function removeItem(button) {
            button.closest("tr").remove();
            calculateTotal();
        }

        function calculateAmount(element) {
            const row = element.closest("tr");
            const rate = parseFloat(row.querySelector(".rateField").value) || 0;
            const quantity = parseFloat(row.querySelector(".quantityField").value) || 0;
            const discountPercent = parseFloat(row.querySelector(".discountField").value) || 0;

            const amount = rate * quantity;
            const discount = (amount * discountPercent) / 100;

            row.querySelector(".amount").textContent = (amount - discount).toFixed(2);
            calculateTotal();
        }

        function calculateTotal() {
            let totalAmount = 0;
            let totalDiscount = 0;

            const rows = document.querySelectorAll("#itemTable tbody tr");
            rows.forEach(row => {
                const rate = parseFloat(row.querySelector(".rateField").value) || 0;
                const quantity = parseFloat(row.querySelector(".quantityField").value) || 0;
                const discountPercent = parseFloat(row.querySelector(".discountField").value) || 0;

                const amount = rate * quantity;
                const discount = (amount * discountPercent) / 100;

                totalAmount += amount;
                totalDiscount += discount;
            });

            document.getElementById("totalAmount").value = totalAmount.toFixed(2);
            document.getElementById("totalDiscount").value = totalDiscount.toFixed(2);
            document.getElementById("netAmount").value = (totalAmount - totalDiscount).toFixed(2);
        }

        function clearItems() {
            document.querySelector("#itemTable tbody").innerHTML = "";
            calculateTotal();
        }

        function formatDate(date) {
            const options = { day: '2-digit', month: 'numeric', year: 'numeric' };
            return date.toLocaleDateString('en-GB', options).replace(/ /g, ' ');
        }

        document.getElementById("dateField").value = formatDate(new Date());

        async function handlePrint() {
            try {
                const res = await fetch("/generate-bill-number");
                const data = await res.json();
                document.getElementById("billNumberField").value = data.billNumber;
                window.print();
            } catch (err) {
                alert("Failed to generate bill number");
                console.error(err);
            }
        }
    </script>
    <script>
function collectTableData() {
    const rows = document.querySelectorAll("#itemTable tbody tr");
    const items = [];

    rows.forEach(row => {
        const item = {
            code: row.querySelector(".itemcode")?.value || "",
            name: row.querySelector(".nameField")?.value || "",
            rate: row.querySelector(".rateField")?.value || "",
            quantity: row.querySelector(".quantityField")?.value || "",
            discount: row.querySelector(".discountField")?.value || ""
        };
        items.push(item);
    });

    document.getElementById("tableData").value = JSON.stringify(items);
}
</script>

</body>
</html>
